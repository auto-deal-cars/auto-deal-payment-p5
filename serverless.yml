service: auto-deal-payment
frameworkVersion: '3'

useDotenv: true

custom:
  tableName: 'auto-deal-payment-${sls:stage}'
  audienceIssuerUrl: ${file(env.json):env.AUDIENCE_ISSUER_URL}
  audienceClientId: ${file(env.json):env.AUDIENCE_CLIENT_ID}
  failedPaymentQueueArn: ${file(env.json):env.FAILED_PAYMENT_QUEUE_ARN}
  successPaymentQueueArn: ${file(env.json):env.SUCCESS_PAYMENT_QUEUE_ARN}
  documentation: ${file(documentation/openapi/serverless.doc.yml):documentation}

provider:
  name: aws
  ecr:
    images:
      auto-deal-payment:
        path: ./
        platform: linux/arm64
  stage: dev
  region: us-east-1
  runtime: python3.10
  timeout: 30
  deploymentMethod: direct
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ AutoDealPaymentTable, Arn ]
        - Effect: Allow
          Action:
            - sqs:SendMessage
          Resource:
            - ${self:custom.failedPaymentQueueArn}
            - ${self:custom.successPaymentQueueArn}
  environment:
    TABLE_NAME: ${self:custom.tableName}
    ENV_ACCESS_TOKEN: ${self:custom.env.ENV_ACCESS_TOKEN}
    MERCADO_PAGO_API_URL: ${self:custom.env.MERCADO_PAGO_API_URL}
    SUCCESS_PAYMENT_QUEUE_URL: ${self:custom.successPaymentQueueArn}
    FAILED_PAYMENT_QUEUE_URL: ${self:custom.failedPaymentQueueArn}

  httpApi:
    cors: true
    authorizers:
      autoDealAuthorizer:
        type: jwt
        identitySource: $request.header.Authorization
        issuerUrl: ${self:custom.audienceIssuerUrl}
        audience:
          - ${self:custom.audienceClientId}
  architecture: arm64
functions:
  pay:
    image:
      name: auto-deal-payment
      command: ["payment.adapters.controllers.pay_controller.create_payment"]
    events:
      - sqs:
          arn:
            Fn::GetAtt: [ InitializePaymentQueue, Arn ]
          batchSize: 10
  webhook-notify:
    image:
      name: auto-deal-payment
      command: ["payment.adapters.controllers.webhook_controller.webhook_notify"]
    events:
      - httpApi:
          path: /webhook
          method: post
          documentation: ${file(documentation/openapi/serverless.doc.yml):endpoints.webhook-notify}
  get-payment:
    image:
      name: auto-deal-payment
      command: ["payment.adapters.controllers.get_payment_controller.get_payment"]
    events:
      - httpApi:
          path: /payment
          method: get
          documentation: ${file(documentation/openapi/serverless.doc.yml):endpoints.get-payment}
          authorizer:
            name: autoDealAuthorizer

plugins:
  - serverless-openapi-documenter

resources:
  Resources:
    AutoDealPaymentTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: payment_id
            AttributeType: N
        KeySchema:
          - AttributeName: payment_id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tableName}
    InitializePaymentQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: initialize-payment-queue.fifo
        VisibilityTimeout: 30
        MessageRetentionPeriod: 300
        FifoQueue: true
        ContentBasedDeduplication: true
